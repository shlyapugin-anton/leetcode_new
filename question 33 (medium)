# beats 100%
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if len(nums) > 0:
            return self.search_1(nums, target, 0, len(nums) - 1)
        else:
            return -1

    def search_1(self, nums, target, left, right):
        if left >= right and nums[left] != target:
            return -1

        mid = (left + right) // 2
        if nums[mid] == target:
            return mid
        if nums[mid] >= nums[left]:
            if nums[left] <= target and target < nums[mid]:
                return self.search_1(nums, target, left, mid - 1)
            else:
                return self.search_1(nums, target, mid + 1, right)

        else:
            if target >= nums[left] or target < nums[mid]:
                return self.search_1(nums, target, left, mid - 1)
            else:
                return self.search_1(nums, target, mid + 1, right)
