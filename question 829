my sol:
it has 468 ms against 51ms (next sol), but it also should have O(n ** 0.5) time of work

class Solution:
    def consecutiveNumbersSum(self, N):
        """
        :type N: int
        :rtype: int
        """
        k = 1
        result = 0
        residue = 0
        while N >= int(k*(k + 1) / 2):
            if k % 2 == 1:
                if N % k == 0:
                    result += 1

            else:
                if N % k == int(k / 2):
                    result += 1

            k += 1

        return result
        
        
sol from leetcode with 52ms:
class Solution(object):
    def consecutiveNumbersSum(self, N):
        while N & 1 == 0:
            N >>= 1

        ans = 1    
        d = 3
        while d * d <= N:
            e = 0
            while N % d == 0:
                N /= d
                e += 1
            ans *= e + 1
            d += 2

        if N > 1: ans *= 2
        return ans
