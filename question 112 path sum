https://leetcode.com/problems/path-sum/description/

my sol (beats ~96%):

class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution:
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        if not root:
            return False
        else:
            sum -= root.val
            if not root.left and not root.right and sum == 0:
                return True
            elif not root.left and not root.right:
                return False
            else:
                return self.hasPathSum(root.left, sum) or self.hasPathSum(root.right, sum)

T = TreeNode(5)
T.left = TreeNode(1)
T.left.right = TreeNode(2)
T.left.left = TreeNode(100)
T.right = TreeNode(10)

S = Solution()

print(S.hasPathSum(T, 105))
